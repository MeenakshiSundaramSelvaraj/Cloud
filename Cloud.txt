What is Spring Boot?
	Spring Boot is a way to ease to create stand-alone application with minimal or zero configurations.
	Spring Boot automatically configures required classes depending on the libraries on its classpath. 
What is a microservices architecture?
	Microservices architecture allows to avoid monolith application for large system. 
	It provide loose coupling between collaborating processes which running independently in different environments with tight cohesion.
What are the advantages and disadvantages of microservices?
Microservices Advantages
	Smaller code base is easy to maintain.
	Easy to scale as individual component.
	Technology diversity i.e. we can mix libraries, databases, frameworks etc.
	Fault isolation i.e. a process failure should not bring whole system down.
	Better support for smaller and parallel team.
	Independent deployment
	Deployment time reduce
Microservices Disadvantages
	Difficult to achieve strong consistency across services
	ACID transactions do not span multiple processes.
	Distributed System so hard to debug and trace the issues
	Greater need for end to end testing
	Required cultural changes in across teams like Dev and Ops working together even in same team.

ACID property refers to the Atomicity, Consistency, Isolation, Durability respectively.

Atomicity- This property says that all the changes to the data is performed if they are single operation.
 For example suppose in a bank application if a fund transfer from one account to another account the atomicity
 property ensures that is a debit is made successfully in one account the corresponding credit would be made in other account.

Consistency- The consistency property of transaction says that the data remains in the consistence state when the transaction starts and ends.
 for example suppose in the same bank account, the fund transfer from one account to another account, the consistency property ensures 
 that the total value(sum of both account ) value remains the same after the transaction ends.

Isolation- This property says that, the intermediate state of transaction are hidden/ invisible to another transaction process.
 Suppose in the the bank application, the isolation  property ensures that the fund transfer  from one account to another account, 
 the transaction sees the fund transfer in one account or the other account.

Durability- The Durability says that when the transaction is completed successfully, the changing to the data is persist and is not un-done, even in the event of system failure.

What is Spring Cloud?
	It is building blocks for Cloud and Microservices
	It provides microservices infrastructure like provide use services such as Service Discovery, Configuration server and Monitoring.
	It provides several other open source projects like Netflix OSS.
	It provides PaaS like Cloud Foundry, AWS and Heroku.
	It uses Spring Boot style starters
	There are many use-cases supported by Spring Cloud like Cloud Integration, Dynamic Reconfiguration, Service Discovery, 
	Security,Client side Load Balancing etc. But in this post we concentrate on following microservices support
	Service Discovery (How do services find each other?)
	Client-side Load Balancing (How do we decide which service instance to use?)
	

Types of microservices

Stateful microservices
Stateless microservices
Stateless services are good candidates as the building blocks of a distributed system. As the name suggests, 
stateless microservices do not maintain session state between requests, for example, if any of the service instance is being removed, 
it does not affect the overall processing logic for the service. Distributed systems do prefer stateless microservices.



How to Improve the Performance of a Java Application

Load testing tools and Application Performance Management (APM) solutions are commonly used to track and optimize the performance of Java applications.
Running load tests around different application scenarios and simultaneously monitoring CPU, IO, Heap usage, etc. using APM tools are key to identifying bottlenecks.
Gatling load testing which provides excellent support of the HTTP protocol
Retrace is mature APM solution with a rich set of features –
Retrace also provides widgets for monitoring Memory, Threads, and Classes for a running JVM based application.
Using StringBuilder for String Concatenation
Avoid Recursion
Use Regular Expressions Carefully	
Avoid Creating and Destroying too Many Threads

JVisualVM cpu thread alll (like tools VisualVM, JProfiler, YourKit and Java Mission Control.)




SPARQL is the query language of the Semantic Web. It lets us:
Pull values from structured and semi-structured data
Explore data by querying unknown relationships
Perform complex joins of disparate databases in a single, simple query
Transform RDF data from one vocabulary to another

Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides secure, resizable compute capacity in the cloud(Virtual computing environments, known as instances ).
Amazon EC2 provides the following features:
1 ) Amazon Machine Images (AMIs) : operating system and additional software
2 ) Config of CPU, memory, storage, and networking capacity
3 ) Crediential configuration
4 ) Temporary data storage volumn for instances  
5 ) persistent storage  via Amazon Elastic Block Store (Amazon EBS ) volumns for Instatnce 
6 ) Firewall config(POrt ,IP)

Platform as a service (PaaS) is a cloud computing model allowing developers to build and deliver applications over the internet
More elaborately, PaaS is like booking an Uber: You get in and choose your destination and the route you want to get there.
 How to keep the car running and figuring out the details is up to Uber’s driver. Infrastructure as a Service (IaaS),
 on the other hand, is like renting a car: Driving, fueling (setting it up, maintaining software, etc.), is your job but getting it repaired is someone’s else problem.
 
 Amazon Relational Database Service

Amazon Relational Database Service (Amazon RDS) is a web service that makes it easier to set up, operate, and scale a relational database in the cloud. 
It provides cost-efficient, resizable capacity for an industry-standard relational database and manages common database administration tasks, 
freeing up developers to focus on what makes their applications and businesses unique.

Amazon RDS gives you access to the capabilities of a MySQL, MariaDB, PostgreSQL, Microsoft SQL Server, Oracle, or Amazon Aurora database server. 
 
How to create thread
There are two ways to create a thread:

1 ) Implementing the Runnable Interface
If you are implementing Runnable interface in your class, then you need to explicitly create a Thread class object and need to pass the Runnable
 interface implemented class object as a parameter in its constructor.
 
2 )  Extending Thread class

What if we call run() method directly without using start() method ?
Doing so, the thread won't be allocated a new call stack, and it will start running in the current call stack, 
that is the call stack of the main thread. Hence Multithreading won't be there.

Thread is basically a lightweight sub-process, a smallest unit of processing. Multiprocessing and multithreading,
 both are used to achieve multitasking.

But we use multithreading than multiprocessing because threads share a common memory area.
 They don't allocate separate memory area so saves memory, and context-switching between the threads takes less time than process.
 
 Advantages of Java Multithreading
1) It doesn't block the user because threads are independent and you can perform multiple operations at same time.
2) You can perform many operations together so it saves time.
3) Threads are independent so it doesn't affect other threads if exception occur in a single thread.



Thread Class vs Runnable Interface
1. If we extend the Thread class, our class cannot extend any other class because Java doesn’t support multiple inheritance. 
But, if we implement the Runnable interface, our class can still extend other base classes.
2. We can achieve basic functionality of a thread by extending Thread class because it provides some inbuilt methods like yield(), interrupt() etc.
 that are not available in Runnable interface.
3.When we extend Thread class, each of our thread creates unique object and associate with it. When we implements Runnable, it shares the same object to multiple threads.
 
